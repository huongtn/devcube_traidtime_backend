{"ast":null,"code":"const crypto = require('crypto');\n\nconst validator = require('validator');\n\nmodule.exports = mongoose => {\n  const purchaseSchema = new mongoose.Schema({\n    product: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'Product',\n      required: [true, 'Product is required']\n    },\n    amount: {\n      type: Number,\n      required: [true, 'Amount is required']\n    },\n    user: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'User'\n    }\n  }, {\n    timestamps: true,\n    toJSON: {\n      virtuals: true\n    },\n    toObject: {\n      virtuals: true\n    }\n  });\n  return purchaseSchema;\n};","map":{"version":3,"sources":["/Users/kelvintran/Documents/devcube/project/devcube_traidtime_backend/models/purchase.js"],"names":["crypto","require","validator","module","exports","mongoose","purchaseSchema","Schema","product","type","Types","ObjectId","ref","required","amount","Number","user","timestamps","toJSON","virtuals","toObject"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACAE,MAAM,CAACC,OAAP,GAAkBC,QAAD,IAAc;AAC7B,QAAMC,cAAc,GAAG,IAAID,QAAQ,CAACE,MAAb,CACrB;AACEC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEJ,QAAQ,CAACE,MAAT,CAAgBG,KAAhB,CAAsBC,QADrB;AAEPC,MAAAA,GAAG,EAAE,SAFE;AAGPC,MAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,qBAAP;AAHH,KADX;AAMEC,IAAAA,MAAM,EAAE;AACNL,MAAAA,IAAI,EAAEM,MADA;AAENF,MAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,oBAAP;AAFJ,KANV;AAUEG,IAAAA,IAAI,EAAE;AACJP,MAAAA,IAAI,EAAEJ,QAAQ,CAACE,MAAT,CAAgBG,KAAhB,CAAsBC,QADxB;AAEJC,MAAAA,GAAG,EAAE;AAFD;AAVR,GADqB,EAgBrB;AAAEK,IAAAA,UAAU,EAAE,IAAd;AAAoBC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAA5B;AAAgDC,IAAAA,QAAQ,EAAE;AAAED,MAAAA,QAAQ,EAAE;AAAZ;AAA1D,GAhBqB,CAAvB;AAkBA,SAAOb,cAAP;AACD,CApBD","sourcesContent":["const crypto = require('crypto');\nconst validator = require('validator');\nmodule.exports = (mongoose) => {\n  const purchaseSchema = new mongoose.Schema(\n    {\n      product: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'Product',\n        required: [true, 'Product is required'],\n      },\n      amount: {\n        type: Number,\n        required: [true, 'Amount is required'],\n      },\n      user: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'User',\n      },\n    },\n    { timestamps: true, toJSON: { virtuals: true }, toObject: { virtuals: true } }\n  );\n  return purchaseSchema;\n} \n"]},"metadata":{},"sourceType":"script"}